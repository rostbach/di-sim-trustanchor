#!/bin/sh -x 
# Shell to start programs needed to demonstrate EAP-SIM authentication
# on environment, where PHONE and HLR AUC are simulated.
# Used programs, all from wpa (v2.3) reference package 
# - wpa-supplicant 
# - RADIUS-server  
# - HLR-AuC
# External WPA2-RADIUS AP hw used  
#
# options:
# -t more timestamps to xxx...
# -K include keydata to debug
# -dddd more debug
#
# usage: 
# 	./apd [OPTION]...

# root directory for programs and logs
BASE=/home/itapuro/gitdocs/di/testit

# Client (supplicant) parameters
WPASUPPLICANT=$BASE/wpa_supplicant
# hostapd as RADIUS role NOT AP-role
HOSTAPD=$BASE/hostapd
# Mobile operator (Home location register authentication centre)
HLR=$BASE/hlr_auc_gw
# if only cred part is in, does not work
WPASUPPLICANTCONF=$BASE/wpa-simtest-owrt2.conf

# HLR_AUC_GW parameters
# sim triplets, when EAP-SIM used
SIM=$BASE/hostapd.sim_db
#  Milenage parameters, when AKA used
MILENAGE=$BASE/hlr_auc_gw.milenage_db

# HOSTAPD parameters
# settings for hostapd include wired, eap_server, eap-handler
HOSTAPDCONF=$BASE/hostapd-jmdemo.conf

# timestamped logs and  confs into safe
TIMESTAMP=`date +s%y%m%d-%H%M%S`
TARGET=$BASE/demot/ap-$TIMESTAMP
mkdir $TARGET
cp $0 $HOSTAPDCONF $SIM $MILENAGE $TARGET 
# reset programs, if still running. 
pkill hlr_auc_gw; pkill wpa_supplicant; pkill hostapd
# Killing does not clean up some locks and sockets
if [ -S /tmp/hlr_auc_gw.sock ] ; then
  rm -f /tmp/hlr_auc_gw.sock
fi
if [ -S ./eth0 ] ; then
  rm -f ./eth0
fi

## 1. HLR_AUC 
# startup using SIM-triplet
# $HLR -g $SIM  >  $TARGET/hlr-debug &
# startup using MILENAGE. Works also with SIM
$HLR -m $MILENAGE > $TARGET/hlr-debug  &

### 2. HOSTAP (in RADIUS-EAP-handler mode)
# initialization
ifconfig wlan0 up
# captures for RADIUS (wired, AP-RADIUS) and
# EAP (wireless, client-AP)
tshark -i eth0  -w $TARGET/eth0-pcap &
tshark -i wlan0 -w $TARGET/wlan0-pcap &
echo start hostapd  
# & pakollinen, jos >
$HOSTAPD -Kdt $HOSTAPDCONF > $TARGET/hostapdwired-debug  &
echo "if $? == 0 then RADIUS server started ok"
sleep 1

### 3. WPA_SUPPLICANT
echo starting supplicant..
$WPASUPPLICANT -dK -iwlan0 -c $WPASUPPLICANTCONF \
	-D nl80211 > $TARGET/wpasupp-extapradius-debug &
### Live analysing
echo starting analyze..
cd  $BASE/demot
cd `ls -d ap-*|tail -1`/
sleep 1 
# follow 3 log files, with color coding set in multitail.conf
multitail -F ../multitail.conf -N 10000  -CS eap-sim -ts host*debug -i  wpa*debug 

# alternatively, start this in own window 
# xterm -e $BASE/demot/anamulti & 

# tests won't take 15 mins..
sleep 900
# if they did, somebody had fallen in sleep.  Commit logs.
pkill tshark
git add $TARGET
git commit -m "apd-tty tests $TIMESTAMP "
